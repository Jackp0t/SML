>>>RAW.sml-content-summary

===

>>>COMMENT

$Author: don.johnson $

$Revision: 15125 $

$Date: 2013-07-07 09:24:43 -0600 (Sun, 07 Jul 2013) $

<<<COMMENT

: !!Exercises.!! ([ref:exercises]) Specify training exercises. A
~~list of exercises~~ is automatically generated for the front matter
of the document.

index:: exercises; list of exercises

:

  >>>EXERCISE.exr-my-exercise
  title: My Exercise
  ===
  <<<EXERCISE

----------------------------------------------------------------------

: !!Slides.!! ([ref:slides]) Slides (often containing bulletized lists
and/or images) designed for training or other presentations can be
easily added to documents.  This makes it easy to create instructor
notes. In the HTML rendition, navigation links enable you to: (1)
advance to the next slide, (2) go back to the previous slide, and (3)
view the list of slides.

index:: slides; presentation slides; list of slides

:

  >>>SLIDE.sld-my-slide
  title: My Slide
  ===
  <<<SLIDE

----------------------------------------------------------------------

: !!Quotations.!! ([ref:quotations]) Long quotations can be included,
and the source cited, using the ``quotation'' region.

index:: quotations; quote source

:

  >>>QUOTATION.quo-my-quote
  title: My Quote
  quote-source: Me
  ===
  <<<QUOTATION

----------------------------------------------------------------------

: !!Demonstrations.!! ([ref:demos]) Demonstrations are step-by-step
procedures designed to show students how something is done. A ~~list
of demonstrations~~ is automatically generated for the front matter of
the document.

index:: demonstrations; list of demonstrations

:

  >>>DEMO.dem-my-demo
  title: My Demo
  ===
  <<<DEMO

----------------------------------------------------------------------

: !!Key-points.!! ([ref:keypoints]) Often included at the beginning of
a chapter, a `keypoints' block is a boxed region that identifies the
key points of that chapter.  In the HTML rendition, navigation links
enable you to advance to the next key points box or go back to the
previous key points box.  This enables readers to very quickly get a
feel for the content of the document.

index:: keypoints

:

  >>>KEYPOINTS.key-my-keypoints
  title: My Keypoints
  ===
  <<<KEYPOINTS

----------------------------------------------------------------------

: !!Problems.!! ([ref:problems]) Structured problems (often called
`requirements') can be identified and strict requirements traceability
can be established within systems engineering documents.

index:: problems; list of problems

:

  >>>problem.req-my-requirement
  title: My Requirement
  ===
  <<<problem

----------------------------------------------------------------------

: !!Solutions.!! ([ref:solutions]) Structured solutions (often system
components or design artifacts) can be identified and strict
requirements traceability can be established within systems
engineering documents.

index:: solutions; list of solutions

:

  >>>solution.sol-my-solution
  title: My Solution
  ===
  <<<solution

----------------------------------------------------------------------

: !!Tests.!! ([ref:tests]) Structured tests can be identified and
strict requirements traceability can be established within systems
engineering documents.

index:: tests; list of tests

:

  >>>test.test-my-test
  title: My Test
  ===
  <<<text

----------------------------------------------------------------------

: !!Results.!! ([ref:results]) Test and audit results can be
identified and strict traceability to problems, solutions, and tests
can be established within systems engineering documents.

index:: results; list of results

:

  >>>result.test-my-test
  title: My Results
  ===
  <<<text

----------------------------------------------------------------------

: !!Tasks.!! ([ref:tasks]) Structured tasks can describe work to be
performed.  You can create systems engineering documents that
establish traceability between problems, solutions, tests, and tasks.

index:: tasks; list of tasks

:

  >>>task.task-my-task
  title: My Task
  ===
  <<<text

----------------------------------------------------------------------

: !!Roles.!! ([ref:roles]) A roles describes the position a person
holds in an organization.  You can create systems engineering documents that
establish traceability between roles, problems, solutions, and tasks.

index:: roles; list of roles

:

  >>>role.role-my-role
  title: My Role
  ===
  <<<role

######################################################################
# Local Emacs Variables

# Local Variables:
# mode: outline
# mode: refill
# coding: us-ascii
# fill-column: 70
# End:

######################################################################

<<<RAW
